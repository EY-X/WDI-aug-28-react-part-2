{"ast":null,"code":"var _jsxFileName = \"/Users/edenyosef/Desktop/gatoronto/wdi2/wdi-july-2019/39-react-part-2/student/grocery-list-2/src/App.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Filters from \"./Filters\";\nimport List from \"./List\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.filters = [{\n      name: \"All\",\n      value: \"all\"\n    }, {\n      name: \"Meat\",\n      value: \"meat\"\n    }, {\n      name: \"Produce\",\n      value: \"prod\"\n    }, {\n      name: \"Dairy\",\n      value: \"dairy\"\n    }, {\n      name: \"Other\",\n      value: \"other\"\n    }];\n    this.initialItems = [{\n      name: \"Steak\",\n      type: \"meat\",\n      quantity: 3,\n      aParam: \"test\"\n    }, {\n      name: \"Apples\",\n      type: \"prod\",\n      quantity: 4\n    }, {\n      name: \"Milk (1L, 2%)\",\n      type: \"dairy\",\n      quantity: 1\n    }, {\n      name: \"Baguettes\",\n      type: \"bakery\",\n      quantity: 2\n    }];\n    this.state = {\n      items: this.initialItems,\n      type: \"all\"\n    };\n\n    this.handleFilterClick = type => {\n      this.setState({\n        type\n      });\n    };\n\n    this.addItem = itemName => {\n      // Lets find the type of itemName\n      let type = \"other\";\n      this.initialItems.map((item, index) => {\n        if (item.name == itemName) type = item.type;\n        console.log(item.aParam === undefined ? \"NOT DEFINED\" : item.aParam);\n      });\n      const item = {\n        name: itemName,\n        type: type,\n        quantity: 1\n      };\n      const newItems = this.state.items.concat(item);\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.incrementItemQuantity = index => {\n      const updatedItems = this.state.items.map((item, i) => {\n        if (i === index) {\n          item.quantity++;\n        }\n\n        return item;\n      });\n      this.setState({\n        items: updatedItems\n      });\n    };\n\n    this.decrementItemQuantity = index => {\n      const updatedItems = this.state.items.map((item, i) => {\n        if (i === index && item.quantity > 0) {\n          item.quantity--;\n        }\n\n        return item;\n      });\n      this.setState({\n        items: updatedItems\n      });\n    };\n\n    this.handleFilterClick = this.handleFilterClick.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"layout\",\n      id: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Grocery List\")), React.createElement(Form, {\n      addItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Filters, {\n      filters: this.filters,\n      handleFilterClick: this.handleFilterClick,\n      currentlySelectedFilter: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(List, {\n      items: this.state.items,\n      incrementItem: this.incrementItemQuantity,\n      decrementItem: this.decrementItemQuantity,\n      currentlySelectedFilter: this.state.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/edenyosef/Desktop/gatoronto/wdi2/wdi-july-2019/39-react-part-2/student/grocery-list-2/src/App.js"],"names":["React","Component","Form","Filters","List","App","constructor","props","filters","name","value","initialItems","type","quantity","aParam","state","items","handleFilterClick","setState","addItem","itemName","map","item","index","console","log","undefined","newItems","concat","incrementItemQuantity","updatedItems","i","decrementItemQuantity","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAKnBC,OALmB,GAKT,CACR;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KADQ,EAER;AAAED,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAFQ,EAGR;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAHQ,EAIR;AAAED,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAJQ,EAKR;AAAED,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KALQ,CALS;AAAA,SAanBC,YAbmB,GAaJ,CACb;AAAEF,MAAAA,IAAI,EAAE,OAAR;AAAiBG,MAAAA,IAAI,EAAE,MAAvB;AAA+BC,MAAAA,QAAQ,EAAE,CAAzC;AAA4CC,MAAAA,MAAM,EAAE;AAApD,KADa,EAEb;AAAEL,MAAAA,IAAI,EAAE,QAAR;AAAkBG,MAAAA,IAAI,EAAE,MAAxB;AAAgCC,MAAAA,QAAQ,EAAE;AAA1C,KAFa,EAGb;AAAEJ,MAAAA,IAAI,EAAE,eAAR;AAAyBG,MAAAA,IAAI,EAAE,OAA/B;AAAwCC,MAAAA,QAAQ,EAAE;AAAlD,KAHa,EAIb;AAAEJ,MAAAA,IAAI,EAAE,WAAR;AAAqBG,MAAAA,IAAI,EAAE,QAA3B;AAAqCC,MAAAA,QAAQ,EAAE;AAA/C,KAJa,CAbI;AAAA,SAoBnBE,KApBmB,GAoBX;AACNC,MAAAA,KAAK,EAAE,KAAKL,YADN;AAENC,MAAAA,IAAI,EAAE;AAFA,KApBW;;AAAA,SAyBnBK,iBAzBmB,GAyBCL,IAAI,IAAI;AAC1B,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KA3BkB;;AAAA,SA6BnBO,OA7BmB,GA6BTC,QAAQ,IAAI;AACpB;AACA,UAAIR,IAAI,GAAG,OAAX;AACA,WAAKD,YAAL,CAAkBU,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,YAAID,IAAI,CAACb,IAAL,IAAaW,QAAjB,EAA2BR,IAAI,GAAGU,IAAI,CAACV,IAAZ;AAC3BY,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACR,MAAL,KAAgBY,SAAhB,GAA4B,aAA5B,GAA4CJ,IAAI,CAACR,MAA7D;AACD,OAHD;AAKA,YAAMQ,IAAI,GAAG;AAAEb,QAAAA,IAAI,EAAEW,QAAR;AAAkBR,QAAAA,IAAI,EAAEA,IAAxB;AAA8BC,QAAAA,QAAQ,EAAE;AAAxC,OAAb;AACA,YAAMc,QAAQ,GAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CAAwBN,IAAxB,CAAjB;AACA,WAAKJ,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEW;AAAT,OAAd;AACD,KAxCkB;;AAAA,SA0CnBE,qBA1CmB,GA0CKN,KAAK,IAAI;AAC/B,YAAMO,YAAY,GAAG,KAAKf,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,CAACC,IAAD,EAAOS,CAAP,KAAa;AACrD,YAAIA,CAAC,KAAKR,KAAV,EAAiB;AACfD,UAAAA,IAAI,CAACT,QAAL;AACD;;AAED,eAAOS,IAAP;AACD,OANoB,CAArB;AAQA,WAAKJ,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEc;AADK,OAAd;AAGD,KAtDkB;;AAAA,SAwDnBE,qBAxDmB,GAwDKT,KAAK,IAAI;AAC/B,YAAMO,YAAY,GAAG,KAAKf,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAqB,CAACC,IAAD,EAAOS,CAAP,KAAa;AACrD,YAAIA,CAAC,KAAKR,KAAN,IAAeD,IAAI,CAACT,QAAL,GAAgB,CAAnC,EAAsC;AACpCS,UAAAA,IAAI,CAACT,QAAL;AACD;;AAED,eAAOS,IAAP;AACD,OANoB,CAArB;AAQA,WAAKJ,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAEc;AADK,OAAd;AAGD,KApEkB;;AAEjB,SAAKb,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBgB,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAmEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,KAAKf,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,KAAKX,OADhB;AAEE,MAAA,iBAAiB,EAAE,KAAKS,iBAF1B;AAGE,MAAA,uBAAuB,EAAE,KAAKF,KAAL,CAAWH,IAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAWE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KADpB;AAEE,MAAA,aAAa,EAAE,KAAKa,qBAFtB;AAGE,MAAA,aAAa,EAAE,KAAKG,qBAHtB;AAIE,MAAA,uBAAuB,EAAE,KAAKjB,KAAL,CAAWH,IAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAoBD;;AA5FyB;;AA+F5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Filters from \"./Filters\";\nimport List from \"./List\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFilterClick = this.handleFilterClick.bind(this);\n  }\n\n  filters = [\n    { name: \"All\", value: \"all\" },\n    { name: \"Meat\", value: \"meat\" },\n    { name: \"Produce\", value: \"prod\" },\n    { name: \"Dairy\", value: \"dairy\" },\n    { name: \"Other\", value: \"other\" }\n  ];\n\n  initialItems = [\n    { name: \"Steak\", type: \"meat\", quantity: 3, aParam: \"test\" },\n    { name: \"Apples\", type: \"prod\", quantity: 4 },\n    { name: \"Milk (1L, 2%)\", type: \"dairy\", quantity: 1 },\n    { name: \"Baguettes\", type: \"bakery\", quantity: 2 }\n  ];\n\n  state = {\n    items: this.initialItems,\n    type: \"all\"\n  };\n\n  handleFilterClick = type => {\n    this.setState({ type });\n  };\n\n  addItem = itemName => {\n    // Lets find the type of itemName\n    let type = \"other\";\n    this.initialItems.map((item, index) => {\n      if (item.name == itemName) type = item.type;\n      console.log(item.aParam === undefined ? \"NOT DEFINED\" : item.aParam);\n    });\n\n    const item = { name: itemName, type: type, quantity: 1 };\n    const newItems = this.state.items.concat(item);\n    this.setState({ items: newItems });\n  };\n\n  incrementItemQuantity = index => {\n    const updatedItems = this.state.items.map((item, i) => {\n      if (i === index) {\n        item.quantity++;\n      }\n\n      return item;\n    });\n\n    this.setState({\n      items: updatedItems\n    });\n  };\n\n  decrementItemQuantity = index => {\n    const updatedItems = this.state.items.map((item, i) => {\n      if (i === index && item.quantity > 0) {\n        item.quantity--;\n      }\n\n      return item;\n    });\n\n    this.setState({\n      items: updatedItems\n    });\n  };\n\n  render() {\n    return (\n      <main className=\"layout\" id=\"app\">\n        <header className=\"header\">\n          <h1>Grocery List</h1>\n        </header>\n        <Form addItem={this.addItem} />\n        <Filters\n          filters={this.filters}\n          handleFilterClick={this.handleFilterClick}\n          currentlySelectedFilter={this.state.type}\n        />\n\n        <List\n          items={this.state.items}\n          incrementItem={this.incrementItemQuantity}\n          decrementItem={this.decrementItemQuantity}\n          currentlySelectedFilter={this.state.type}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}